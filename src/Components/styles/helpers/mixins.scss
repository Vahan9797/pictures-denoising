@mixin flexbox($justifyContent: center, $alignItems: center, $flexDirection: row) {
	display: flex;
	flex-direction: $flexDirection;

	@if $justifyContent != center and $alignItems == center {
		justify-content: $justifyContent;
		align-items: $justifyContent;
	} @else {
		justify-content: $justifyContent;
		align-items: $alignItems;
	}
}

@mixin positionize($position: absolute, $top: auto, $left: auto, $right: auto, $bottom: auto) {
	position: $position;
	
	@if $top != auto and $left == auto and $right == auto and $bottom == auto {
		top: $top;
		left: $top;
		right: $top;
		bottom: $top;
	} @else {
		top: $top;
		left: $left;
		right: $right;
		bottom: $bottom;
	}
}

@mixin inherit($selectorList) {
	@each $selector in $selectorList {
		#{$selector}: inherit;
	}
}

@mixin word-wrapper() {
	word-wrap: break-word;
	word-break: break-word;
	white-space: nowrap;
	text-overflow: ellipsis;
}

@mixin attachToView($normal, $min, $max, $measureH: 'vh', $measureW: 'vw') {
	height: #{$normal}#{$measureH};
	min-height: #{$min}#{$measureH};
	max-height: #{$max}#{$measureH};

	@if $measureH != 'vh' and $measureW == 'vw' {
		width: #{$normal}#{$measureH};
		min-width: #{$min}#{$measureH};
		max-width: #{$max}#{$measureH};
	} @else {
		width: #{$normal}#{$measureW};
		min-width: #{$min}#{$measureW};
		max-width: #{$max}#{$measureW};
	}
}

@mixin box-shadow($firstLayerColor, $mainColor, $secondLayerColor, $opacity: 0.7) {
    box-shadow:
    inset 0 0 50px RGBA($firstLayerColor, $opacity),
    inset 20px 0 80px RGBA($mainColor, $opacity),
    inset -20px 0 80px RGBA($secondLayerColor, $opacity),
    0 0 50px RGBA($firstLayerColor, $opacity),
    -10px 0 80px RGBA($mainColor, $opacity),
    10px 0 80px RGBA($secondLayerColor, $opacity);
}

@mixin notification($type: 'info') {
	@if $type == 'success' {
		color: RGB($notificationSuccessColorRGB);
		background: RGB($notificationSuccessBgRGB);
		@include box-shadow($notificationSuccessGlowColorRGB...);
		@include duration-time('success');
	} @else if $type == 'warning' {
		color: RGB($notificationWarningColorRGB);
		background: RGB($notificationWarningBgRGB);
		@include box-shadow($notificationWarningGlowColorRGB...);
		@include duration-time('warning');
	} @else if $type == 'error' {
		color: RGB($notificationErrorColorRGB);
		background: RGB($notificationErrorBgRGB);
		@include box-shadow($notificationErrorGlowColorRGB...);
		@include duration-time('error');
	} @else {
		color: RGB($notificationInfoColorRGB);
		background: RGB($notificationInfoBgRGB);
		@include box-shadow($notificationInfoGlowColorRGB...);
		@include duration-time('info');
	}
}

// this is a helper mixin for notification
@mixin duration-time($type: 'info') {
	.duration-time {
		@if $type == 'success' {
			background: linear-gradient(center bottom, RGB($notificationSuccessColorRGB) 50%, RGB($notificationSuccessBgRGB) 50%);
		} @else if $type == 'warning' {
			background: linear-gradient(center bottom, RGB($notificationWarningColorRGB) 50%, RGB($notificationWarningBgRGB) 50%);
		} @else if $type == 'error' {
			background: linear-gradient(center bottom, RGB($notificationErrorColorRGB) 50%, RGB($notificationErrorBgRGB) 50%);
		} @else {
			background: linear-gradient(center bottom, RGB($notificationInfoColorRGB) 50%, RGB($notificationInfoBgRGB) 50%);
		}
	}
}